#	The packetizer (Accepted values: HARQ, latency_evaluator)
#	Type:	string
packetizer=harq

#	Whether to use the estimated latency instead of the fixed wait time. If enabled, the actual wait time will be (number of packets)*tuned_ARQ_wait_singlepacket
#	Type:	bool
use_tuned_arq_wait=no

#	Estimate of the worst case latency in ms (send packet - receive). Evaluate with your pair using the packetizer: latency_evaluator
#	Type:	double
tuned_arq_wait_singlepacket=0.85

#	The minimum time in milliseconds the ARQ algorithm should wait before declaring one packet lost
#	Type:	uint16
minimum_arq_wait=5

#	The maximum time in milliseconds to retry sending one frame before dropping it
#	Type:	uint16
maximum_frame_time=400

#	Filename for the CSV output (leave empty for no output)
#	Type:	string
csv_out_filename=

#	(HARQ only) How many bits should be used for packet identification (range: 1-2) Note: bits_id + bits_segment + bits_lastpacketmarker must be 8
#	Type:	uint8
bits_id=2

#	(HARQ only) How many bits should be used for packet segmentation (range: 4-5) Note: bits_id + bits_segment + bits_lastpacketmarker must be 8
#	Type:	uint8
bits_segment=5

#	(HARQ only) How many bits should be used to mark transmission finished (leave to 1) Note: bits_id + bits_segment + bits_lastpacketmarker must be 8
#	Type:	uint8
bits_lastpacketmarker=1

